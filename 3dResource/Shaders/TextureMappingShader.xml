<OakShader>
	<Common>
		varying vec2 pixel_coord; //fragment texture coordinate
	</Common>

	<Vertex>
		attribute vec3 position;  //vertex position
		attribute vec2 vertex_coord; //the texture coordinate of the current vertex

		uniform mat4 matWorld, matProj;  //world transform matrix and projection transform matrix

		void main(void) {
			//transform the vertex position to the post-projection space
			gl_Position = matProj * matWorld * vec4(position, 1.0);
	        
			//assign value to the fragment texture coordinate
			//the texture coordinate of every fragments will be rasterized from the vertices' fragment texture coordinate
			pixel_coord = vertex_coord;
		}
	</Vertex>

	<Fragment>
		uniform sampler2D tex; //the texture sampler, represents a texture object in shader program
	    
		void main(void) {
			//fetch texel from the texture and assign it to the final shader output
			gl_FragColor = texture2D(tex, pixel_coord); 
		}
	</Fragment>

</OakShader>