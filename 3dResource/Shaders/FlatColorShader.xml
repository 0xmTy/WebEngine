<OakShader>
	<Common>
		varying vec3 fragment_color; //fragment color	
	</Common>

	<Vertex>
	    attribute vec3 position; //vertex position
		attribute vec3 color;  //vertex color

		uniform mat4 matWorld, matProj; //world transform matrix and projection transform matrix
	    
		void main(void) {
			//transform the vertex position to the post-projection space
			gl_Position = matProj * matWorld * vec4(position, 1.0); 
	        
			//assign value to the fragment color, the color of every fragments will be rasterized from the vertices' fragment color
			fragment_color = color; 
		}
	</Vertex>

	<Fragment>
		void main(void) {
			gl_FragColor = vec4(fragment_color, 1.0); //assign the fragment color to the final shader output
		}
	</Fragment>

</OakShader>